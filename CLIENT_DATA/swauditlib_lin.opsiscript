; Copyright (c) uib GmbH <info@uib.de>
; License: AGPL-3.0

encoding=utf8

DefFunc get_linux_os_info() : void
	init_vars()
	setloglevel=$Midloglevel$

	Set $displayName$ = $distroName$ + " " + $distRelease$
	Set $displayVersion$ = $distRelease$
	Switch getOSArchitecture
		Case "x86_32"
			set $architecture$ = "x86"
		EndCase
		Case "x86_64"
			set $architecture$ = "x64"
		EndCase
		Case "arm_64"
			set $architecture$ = "arm64"
		EndCase
		DefaultCase
			set $architecture$ = ""
		EndCase
	EndSwitch
	Set $isOperatingSystem$ = "1"

	add_audit_objects()
Endfunc


DefFunc get_linux_products_debian($currentKey$ : string) : void
	DefVar $listcount$
	setloglevel=$Midloglevel$
	if not ($currentKey$ = "")
		init_vars()
		set $resultlist$ = splitStringOnWhiteSpace($currentKey$)
		set $listcount$ = count($resultlist$)
		set $displayName$ = takeString(0,$resultlist$)
		; Get installation state
		set $tmp$ = ""
		if $listcount$ int>= "5"
			set $tmp$ = takeString(4,$resultlist$)
		endif
		; Do not include packages with state 'rc'
		if not ($displayName$ = '') and not($tmp$ = 'rc')
			if $listcount$ int>= "2"
				set $displayVersion$ = takeString(1,$resultlist$)
				if $listcount$ int>= "3"
					set $tmp$ = takeString(2,$resultlist$)
					if ($tmp$ = "i386") or ($tmp$ = "i586") or ($tmp$ = "i686")
						set $architecture$ = "x86"
					endif
					if ($tmp$ = "amd64") or ($tmp$ = "x86_64")
						set $architecture$ = "x64"
					endif
					if ($tmp$ = "arm64") or ($tmp$ = "aarch64")
						set $architecture$ = "arm64"
					endif
					if ($tmp$ = "noarch") or ($tmp$ = "all")
						set $architecture$ = ""
					endif
					if $listcount$ int>= "4"
						set $installSize$ = takeString(3,$resultlist$)
						if not(isNumber($installSize$))
							set $installSize$ = "-1"
						endif
					endif
				endif
			endif
			set $winSoftwareId$ = $displayName$

			add_audit_objects()
		endif
	endif
Endfunc

DefFunc get_linux_products_suse($currentKey$ : string) : void
	setloglevel=$Midloglevel$
	if not ($currentKey$ = "")
		init_vars()
		set $resultlist$ = splitStringOnWhiteSpace($currentKey$)
		if takeString(0,$resultlist$) = 'i'
			set $displayName$ = takeString(2,$resultlist$)
			set $displayVersion$ = takeString(6,$resultlist$)
			set $tmp$ = takeString(8,$resultlist$)
			if ($tmp$ = "i386") or ($tmp$ = "i586") or ($tmp$ = "i686")
				set $architecture$ = "x86"
			endif
			if ($tmp$ = "amd64") or ($tmp$ = "x86_64")
				set $architecture$ = "x64"
			endif
			if ($tmp$ = "arm64") or ($tmp$ = "aarch64")
				set $architecture$ = "arm64"
			endif
			if ($tmp$ = "noarch") or ($tmp$ = "all")
				set $architecture$ = ""
			endif
			set $winSoftwareId$ = $displayName$

			add_audit_objects()
		endif
	endif
Endfunc

DefFunc get_linux_products_redhat($currentKey$ : string) : void
	setloglevel=$Midloglevel$
	if not ($currentKey$ = "")
		init_vars()
		set $resultlist$ = splitStringOnWhiteSpace($currentKey$)
		set $displayName$ = takeString(0,$resultlist$)
		set $resultlist2$  = splitString($displayName$, ".")
		set $displayName$ = takeString(0,$resultlist2$)
		set $tmp$ = takeString(1,$resultlist2$)
		if ($tmp$ = "i386") or ($tmp$ = "i586") or ($tmp$ = "i686")
			set $architecture$ = "x86"
		endif
		if ($tmp$ = "amd64") or ($tmp$ = "x86_64")
			set $architecture$ = "x64"
		endif
		if ($tmp$ = "aarch64")
			set $architecture$ = "arm64"
		endif
		if ($tmp$ = "noarch") or ($tmp$ = "all")
			set $architecture$ = ""
		endif
		set $displayVersion$ = takeString(1,$resultlist$)
		set $winSoftwareId$ = $displayName$

		add_audit_objects()
	endif
Endfunc
